<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="Shotgun" label="Shotgun">
    <memberTool name="Jump_to_Shotgun"/>
    <memberTool name="Jump_to_File_System"/>
    <memberTool name="Jump_to_Screening_Room_in_RV"/>
    <memberTool name="Jump_to_Screening_Room_Web_Player"/>
    <memberTool name="Toggle_Debug_Logging"/>
    <memberTool name="Work_Area_Info..."/>
    <memberTool name="Open_Log_Folder"/>
    <memberTool name="File_Open..."/>
    <memberTool name="File_Save..."/>
  </toolshelf>





  <tool name="Jump_to_Shotgun" label="Jump to Shotgun" icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/app_store/tk-houdini/v1.6.0/resources/shotgun_logo.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.None.jump_to_shotgun')
]]></script>
  </tool>




  <tool name="Jump_to_File_System" label="Jump to File System" icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/app_store/tk-houdini/v1.6.0/resources/shotgun_folder.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.None.jump_to_file_system')
]]></script>
  </tool>





  <tool name="Jump_to_Screening_Room_in_RV" label="Jump to Screening Room in RV" icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/app_store/tk-multi-screeningroom/v0.3.3/icon_256.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.tk-multi-screeningroom.jump_to_screening_room_in_rv')
]]></script>
  </tool>









  <tool name="Jump_to_Screening_Room_Web_Player" label="Jump to Screening Room Web Player" icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/app_store/tk-multi-screeningroom/v0.3.3/icon_256.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.tk-multi-screeningroom.jump_to_screening_room_web_player')
]]></script>
  </tool>










  <tool name="Toggle_Debug_Logging" label="Toggle Debug Logging" icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/core/python/tank/platform/qt/book_256.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.None.toggle_debug_logging')
]]></script>
  </tool>







  <tool name="Work_Area_Info..." label="Work Area Info..." icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/app_store/tk-multi-about/v0.2.8/icon_256.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.tk-multi-about.work_area_info___')
]]></script>
  </tool>

  <tool name="Open_Log_Folder" label="Open Log Folder" icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/core/python/tank/platform/qt/folder_256.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.None.open_log_folder')
]]></script>
  </tool>

  <tool name="File_Open..." label="File Open..." icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/app_store/tk-multi-workfiles2/v0.11.9/icon_256.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.tk-multi-workfiles2.file_open___')
]]></script>
  </tool>

  <tool name="File_Save..." label="File Save..." icon="Y:/tool/ND_Tools/shotgun/ND_sgtoolkit_mem2/install/app_store/tk-multi-workfiles2/v0.11.9/icon_256.png">
    <script scriptType="python"><![CDATA[
import hou
import tank.platform.engine

engine = tank.platform.engine.current_engine()
if engine is None or not hasattr(engine, 'launch_command'):
    msg = "Shotgun: Houdini engine is not loaded."
    if hou.isUIAvailable():
        hou.ui.displayMessage(msg)
    else:
        print msg
else:
    engine.launch_command('tk.app.tk-multi-workfiles2.file_save___')
]]></script>
  </tool>
</shelfDocument>
